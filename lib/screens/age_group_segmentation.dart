import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:syncfusion_flutter_charts/charts.dart';
import 'dart:math';

// Model for Age Group Data
class AgeGroupData {
  final String ageGroup;
  final int bookings;
  final double revenue; // Unique metric: revenue generated by each age group

  AgeGroupData(this.ageGroup, this.bookings, this.revenue);
}

class AgeGroupSegmentationScreen extends StatefulWidget {
  const AgeGroupSegmentationScreen({Key? key}) : super(key: key);

  @override
  _AgeGroupSegmentationScreenState createState() => _AgeGroupSegmentationScreenState();
}

class _AgeGroupSegmentationScreenState extends State<AgeGroupSegmentationScreen> {
  late List<AgeGroupData> ageGroupData;

  @override
  void initState() {
    super.initState();
    ageGroupData = _generateAgeGroupData();
  }

  // Generates sample age group segmentation data
  List<AgeGroupData> _generateAgeGroupData() {
    return [
      AgeGroupData("Child (0-12)", 15, 1200.0),
      AgeGroupData("Adult (13-35)", 50, 8200.0),
      AgeGroupData("Middle Age (36-55)", 40, 9500.0),
      AgeGroupData("Elder (56+)", 25, 6000.0),
    ];
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const SizedBox(height: 16),

              // ðŸ“Š Pie Chart for Age Group Bookings
              SizedBox(
                height: 300,
                child: SfCircularChart(
                  title: ChartTitle(text: "Guest Bookings by Age Group"),
                  legend: Legend(isVisible: true),
                  series: <CircularSeries>[
                    DoughnutSeries<AgeGroupData, String>(
                      dataSource: ageGroupData,
                      xValueMapper: (AgeGroupData data, _) => data.ageGroup,
                      yValueMapper: (AgeGroupData data, _) => data.bookings,
                      dataLabelSettings: const DataLabelSettings(isVisible: true),
                      enableTooltip: true,
                    ),
                  ],
                ),
              ),

              const SizedBox(height: 16),

              // ðŸ“ˆ Line Chart for Revenue per Age Group
              SizedBox(
                height: 300,
                child: SfCartesianChart(
                  title: ChartTitle(text: "Revenue Contribution by Age Group"),
                  legend: Legend(isVisible: false),
                  primaryXAxis: CategoryAxis(),
                  series: <CartesianSeries>[
                    LineSeries<AgeGroupData, String>(
                      dataSource: ageGroupData,
                      xValueMapper: (AgeGroupData data, _) => data.ageGroup,
                      yValueMapper: (AgeGroupData data, _) => data.revenue,
                      dataLabelSettings: const DataLabelSettings(isVisible: true),
                      color: Colors.blue,
                    ),
                  ],
                ),
              ),

              const SizedBox(height: 16),

              // AI Summary Section
              Card(
                color: Colors.blueGrey[100],
                child: Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Text(
                        "ðŸ“Š AI Age Group Insights",
                        style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                      ),
                      const SizedBox(height: 8),
                      Text(
                        "Adults (13-35) contribute the highest number of bookings, accounting for 50% of total arrivals. "
                            "\nHowever, Middle Age (36-55) guests generate the highest revenue at \$9500."
                            "\nConsider targeted promotions for high-value customer groups!",
                        style: GoogleFonts.lato(fontSize: 14),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}